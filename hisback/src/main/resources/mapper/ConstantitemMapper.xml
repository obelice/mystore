<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neusoft.his.mapper.ConstantitemMapper">
  <resultMap id="BaseResultMap" type="Constantitem">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="ConstantTypeID" jdbcType="INTEGER" property="constanttypeid" />
    <result column="ConstantCode" jdbcType="VARCHAR" property="constantcode" />
    <result column="ConstantName" jdbcType="VARCHAR" property="constantname" />
    <result column="DelMark" jdbcType="INTEGER" property="delmark" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, ConstantTypeID, ConstantCode, ConstantName, DelMark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from constantitem
    where ID = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByCount" parameterType="Constantitem" resultType="int">
    select count(*) from constantitem
   		<where>
   			<if test="constantname!=null and constantname!=''">
   				and ConstantName like concat('%',#{constantname,jdbcType=VARCHAR},'%') 
   			</if>
   		</where>
  </select>
  
  <select id="selectAll" parameterType="Constantitem" resultType="Constantitem">
    select * from constantitem
   		<where>
   			<if test="ConstantName!=null and ConstantName!=''">
   				and ConstantName like concat('%',#{constantname,jdbcType=VARCHAR},'%') 
   			</if>
   		</where>
    order by ID desc
    limit #{beginNum},#{maxNum}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from constantitem
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Constantitem">
    insert into constantitem (ID, ConstantTypeID, ConstantCode, 
      ConstantName, DelMark)
    values (#{id,jdbcType=INTEGER}, #{constanttypeid,jdbcType=INTEGER}, #{constantcode,jdbcType=VARCHAR}, 
      #{constantname,jdbcType=VARCHAR}, #{delmark,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="Constantitem">
    insert into constantitem
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="constanttypeid != null">
        ConstantTypeID,
      </if>
      <if test="constantcode != null">
        ConstantCode,
      </if>
      <if test="constantname != null">
        ConstantName,
      </if>
      <if test="delmark != null">
        DelMark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="constanttypeid != null">
        #{constanttypeid,jdbcType=INTEGER},
      </if>
      <if test="constantcode != null">
        #{constantcode,jdbcType=VARCHAR},
      </if>
      <if test="constantname != null">
        #{constantname,jdbcType=VARCHAR},
      </if>
      <if test="delmark != null">
        #{delmark,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Constantitem">
    update constantitem
    <set>
      <if test="constanttypeid != null">
        ConstantTypeID = #{constanttypeid,jdbcType=INTEGER},
      </if>
      <if test="constantcode != null">
        ConstantCode = #{constantcode,jdbcType=VARCHAR},
      </if>
      <if test="constantname != null">
        ConstantName = #{constantname,jdbcType=VARCHAR},
      </if>
      <if test="delmark != null">
        DelMark = #{delmark,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Constantitem">
    update constantitem
    set ConstantTypeID = #{constanttypeid,jdbcType=INTEGER},
      ConstantCode = #{constantcode,jdbcType=VARCHAR},
      ConstantName = #{constantname,jdbcType=VARCHAR},
      DelMark = #{delmark,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>