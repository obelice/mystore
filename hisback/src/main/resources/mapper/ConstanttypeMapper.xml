<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neusoft.his.mapper.ConstanttypeMapper">

  <resultMap id="BaseResultMap" type="Constanttype">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="ConstantTypeCode" jdbcType="VARCHAR" property="constanttypecode" />
    <result column="ConstantTypeName" jdbcType="VARCHAR" property="constanttypename" />
    <result column="DelMark" jdbcType="INTEGER" property="delmark" />
  </resultMap>
   
  <sql id="Base_Column_List">
    ID, ConstantTypeCode, ConstantTypeName, DelMark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from constanttype
    where ID = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByCount" parameterType="Constanttype" resultType="int">
    select count(*) from constanttype
   		<where>
   			<if test="constanttypename!=null and constanttypename!=''">
   				and ConstantTypeName like concat('%',#{constanttypename,jdbcType=VARCHAR},'%') 
   			</if>
   		</where>
  </select>
  
  <select id="selectAll" parameterType="Constanttype" resultType="Constanttype">
    select * from constanttype
   		<where>
   			<if test="constanttypename!=null and constanttypename!=''">
   				and ConstantTypeName like concat('%',#{constanttypename,jdbcType=VARCHAR},'%') 
   			</if>
   		</where>
    order by ID desc
    limit #{beginNum},#{maxNum}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from constanttype
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Constanttype">
    insert into constanttype (ID, ConstantTypeCode, ConstantTypeName, 
      DelMark)
    values (#{id,jdbcType=INTEGER}, #{constanttypecode,jdbcType=VARCHAR}, #{constanttypename,jdbcType=VARCHAR}, 
      #{delmark,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="Constanttype">
    insert into constanttype
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="constanttypecode != null">
        ConstantTypeCode,
      </if>
      <if test="constanttypename != null">
        ConstantTypeName,
      </if>
      <if test="delmark != null">
        DelMark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="constanttypecode != null">
        #{constanttypecode,jdbcType=VARCHAR},
      </if>
      <if test="constanttypename != null">
        #{constanttypename,jdbcType=VARCHAR},
      </if>
      <if test="delmark != null">
        #{delmark,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Constanttype">
    update constanttype
    <set>
      <if test="constanttypecode != null">
        ConstantTypeCode = #{constanttypecode,jdbcType=VARCHAR},
      </if>
      <if test="constanttypename != null">
        ConstantTypeName = #{constanttypename,jdbcType=VARCHAR},
      </if>
      <if test="delmark != null">
        DelMark = #{delmark,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Constanttype">
    update constanttype
    set ConstantTypeCode = #{constanttypecode,jdbcType=VARCHAR},
      ConstantTypeName = #{constanttypename,jdbcType=VARCHAR},
      DelMark = #{delmark,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update> 
</mapper>